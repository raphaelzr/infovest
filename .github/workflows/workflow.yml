# The name of the workflow.
name: Java CI

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

  analyze:
    name: codeQL
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    needs: build
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     language: [ 'java-kotlin' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        #languages: ${{ matrix.language }}
        languages: ${{ 'java-kotlin' }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        #category: "/language:${{matrix.language}}"
        category: "/language:${{'java-kotlin'}}"
        
  stackhawk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for stackhawk/hawkscan-action to upload code scanning alert info
    name: stackHawk
    runs-on: ubuntu-20.04
    needs: analyze  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package

      - name: Start your service
        run: java -jar actions-java-lab-1.0-SNAPSHOT-jar-with-dependencies.jar &

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@4c3258cd62248dac6d9fe91dd8d45928c697dee0
        continue-on-error: true                   # ✏️ Set to false to break your build on scan errors
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          codeScanningAlerts: true
          githubToken: ${{ github.token }}

  deploy:

    runs-on: ubuntu-latest
    needs: stackhawk

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package

      - name: Set up SSH
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 40.88.146.254 >> ~/.ssh/known_hosts
      - name: Deploy to server
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          scp -i ~/.ssh/id_rsa -r ./* azureadmin@40.88.146.254:/app/data/

      - name: Start Java Application
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          ssh -i ~/.ssh/id_rsa azureadmin@40.88.146.254 'java -jar /app/data/actions-java-lab-1.0-SNAPSHOT-jar-with-dependencies.jar > /dev/null 2>&1 &'
          #ssh -i ~/.ssh/id_rsa azureadmin@40.88.146.254 'java -jar /app/data/actions-java-lab-1.0-SNAPSHOT-jar-with-dependencies.jar &'
          
